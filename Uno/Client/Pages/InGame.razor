@page "/game/{id}"

@using Uno.Shared

@inject Api api

<JoinGameDialog @bind-Show="showJoinDialog" GameId="@this.Id" OnJoined="OnJoined"/>

@if (lastStatus.State == ListenGameResponse.GameStatus.AwaitingStart)
{
	<PlayerNameList Status="lastStatus" />
}

@code {
	private ListenGameResponse lastStatus = ListenGameResponse.Empty;
	private string playerName = string.Empty;
	private bool showJoinDialog = false;

	[Parameter]
	public string Id { get; set; } = string.Empty;

	protected override async void OnInitialized()
	{
		await base.OnInitializedAsync();

		var rejoinResult = await api.Game.RejoinGameAsync(new RejoinGameRequest(this.Id));

		if (rejoinResult.IsSuccess)
		{
			this.playerName = rejoinResult.PlayerName;
			OnJoined();
		}
		else
		{
			this.showJoinDialog = true;
			this.StateHasChanged();
		}
	}

	private void OnJoined()
	{
		Listen()
			.CatchExceptions();
	}

	private async Task Listen()
	{
		await foreach (var status in api.Game.ListenGameAsync(new ListenGameRequest(this.Id)))
		{
			this.lastStatus = status;
			this.StateHasChanged();
		}
	}
}
